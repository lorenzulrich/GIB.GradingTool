resources:
  methods:
    Flow_LoginSignedInMethods: 'method(Flow\Login\Controller\LoginController->signedInAction())'
    AdminClass: 'method(GIB\GradingTool\Controller\AdminController->.*())'
    RemoveProject: 'method(GIB\GradingTool\Controller\ProjectController->removeAction())'
    activateSubmissionForm: 'method(GIB\GradingTool\Controller\ProjectController->activateSubmissionFormAction())'
    deactivateSubmissionForm: 'method(GIB\GradingTool\Controller\ProjectController->deactivateSubmissionFormAction())'
    editDataSheet: 'method(GIB\GradingTool\Controller\ProjectController->editDataSheetAction())'
    submission: 'method(GIB\GradingTool\Controller\ProjectController->submissionAction())'
    formBuilderEditorController: 'class(TYPO3\FormBuilder\Controller\EditorController)'
    formBuilderFormManagerController: 'class(TYPO3\FormBuilder\Controller\FormManagerController)'
    formBuilderStandardController: 'class(TYPO3\FormBuilder\Controller\StandardController)'

  #entities:
  #  'GIB\GradingTool\Domain\Model\Project':
  #    GIB_GradingTool_Projects_All: 'current.securityContext.party != this.projectManager'
  #    GIB_GradingTool_Projects_Own: 'current.securityContext.party == this.projectManager'

roles:
  Administrator: []
  ProjectManager: []

acls:
  Administrator:
    methods:
      Flow_LoginSignedInMethods: GRANT
      AdminClass: GRANT
      RemoveProject: GRANT
      activateSubmissionForm: GRANT
      deactivateSubmissionForm: GRANT
      editDataSheet: GRANT
      submission: GRANT
      formBuilderEditorController: GRANT
      formBuilderFormManagerController: GRANT
      formBuilderStandardController: GRANT
    #entities:
     # GIB_GradingTool_Projects_Own: GRANT
     # GIB_GradingTool_Projects_All: GRANT
  ProjectManager:
    methods:
      editDataSheet: GRANT
      submission: GRANT
    #entities:
     # GIB_GradingTool_Projects_Own: GRANT
